{"version":3,"sourceRoot":"","sources":["file:///Users/patricklake/Dev/personal/css_utilities/src/utils-exports/_box-shadow.scss","file:///Users/patricklake/Dev/personal/css_utilities/src/variables/base-vars/index.scss","file:///Users/patricklake/Dev/personal/css_utilities/src/mixins/index.scss"],"names":[],"mappings":"AAUA,MACE,sBAGF,YACE,WCqFW,gCDlFb,iBACE,gBEbA,yBFkBE,eACE,sDAGF,oBACE,4BEvBJ,yBFkBE,eACE,sDAGF,oBACE,4BEvBJ,yBFkBE,eACE,sDAGF,oBACE,4BEvBJ,yBFkBE,eACE,sDAGF,oBACE,4BEvBJ,2BFkBE,gBACE,sDAGF,qBACE,4BAgCJ,UACE,WAlBO,kCAoBT,gBACE,WApBa,wCAgBf,UACE,WARa,0FAUf,gBACE,WApBa,8DAgBf,UACE,WARa,gHAUf,gBACE,WApBa,8DAgBf,UACE,WARa,gHAUf,gBACE,WApBa,8DAgBf,UACE,WARa,8GAUf,gBACE,WApBa,4DAgBf,UACE,WARa,6GAUf,gBACE,WApBa,6DAyBf,gBAEE,4BAFF,kBAEE,4BAFF,eAEE,4BAFF,iBAEE,sBAFF,aAEE,sBAFF,cAEE,4BAFF,cAEE,yBAFF,cAEE,4BAFF,YAEE,wBAFF,eAEE,0BAFF,eAEE,0BAFF,cAEE,wBAFF,aAEE,wBAFF,aAEE,0BAFF,eAEE,yBAFF,eAEE,0BAFF,eAEE,0BAFF,aAEE","sourcesContent":["@use 'sass:map';\n\n@import '../base-vars';\n@import '../base-maps';\n@import '../mixins/';\n/* @import '../reset/'; */\n// Extract RGB colors for color variable\n$shadow-value: red($shadow-color) green($shadow-color) blue($shadow-color);\n\n// Set color variable\n:root {\n  --shadow-color: #{$shadow-value};\n}\n\n.box-shadow {\n  box-shadow: $box-shadow;\n}\n\n.box-shadow-none {\n  box-shadow: none;\n}\n\n@each $bp, $px in $breakpoints {\n  @include respond-to($px) {\n    .box-shadow-#{$bp} {\n      box-shadow: $box-shadow !important;\n    }\n\n    .box-shadow-#{$bp}-none {\n      box-shadow: none !important;\n    }\n  }\n}\n\n$previous-shadow: false;\n\n@each $key, $val in $shadows {\n  // Get the spread value\n  $spread: map.get($shadows, $key, 'spread');\n  // Get the opacity value\n  $opacity: map.get($shadows, $key, 'opacity');\n\n  // Construct the shadow value\n  // !The '/' is reguired for this to work. A comma does not work\n  $shadow: $spread rgba(var(--shadow-color) / $opacity);\n  $shadow-inset: inset #{$shadow};\n\n  // Place holder for accumulative box shadow\n  $box-shadow: ();\n  $box-shadow-inset: $shadow-inset;\n\n  // The first shadow will be a single box shadow\n  // Every one after will recieve the previous shadow and it's own\n  @if ($previous-shadow and $previous-shadow != none) {\n    $box-shadow: #{$shadow}, #{$previous-shadow};\n  } @else {\n    $box-shadow: $shadow;\n  }\n  // Over-ride this value for the next loop\n  $previous-shadow: $shadow;\n\n  .shadow-#{$key} {\n    box-shadow: $box-shadow;\n  }\n  .shadow-inset-#{$key} {\n    box-shadow: $box-shadow-inset;\n  }\n}\n\n@each $key, $var in $target-colors {\n  .shadow-#{'' + $key} {\n    $shadow-value: red($var) green($var) blue($var);\n    --shadow-color: #{$shadow-value};\n  }\n}\n","// Global\n$base-font-size: 16;\n$base-spacing: 1rem;\n\n// Responsive Sizes\n$screen-sm-min: rem(576);\n$screen-md-min: rem(768);\n$screen-lg-min: rem(992);\n$screen-xl-min: rem(1200);\n$screen-xxl-min: rem(1400);\n\n// **************************************************\n// ******************** Colors **********************\n// **************************************************\n\n$transparent: #00000000;\n$transparent-partial: #0000005e;\n\n$black: #121212;\n$white: #f5f5f5;\n$red: #ff0000;\n$orange: #ffa500;\n$yellow: #ffff00;\n$green: #008000;\n$cyan: #00ffff;\n$blue: #0000ff;\n$indigo: #4b0082;\n$violet: #473198;\n$purple: #800080;\n$grey: #292a2b;\n$error: #e52525;\n\n// **************************************************\n// **************** Colors Themeing *****************\n// **************************************************\n\n// /* Bg color vars */\n$bg-primary: #ffffff;\n$bg-secondary: #666666;\n$bg-accent: #999999;\n$bg-tertiary: #000000;\n$bg-dark: #000000;\n\n// /* Text colors */\n$text-light: #ffffff;\n$text-dark: #000000;\n$text-header-light: #ccc0c0;\n$text-header-dark: #1b1a1a;\n$link-color: #0000ff;\n\n$shadow-color: #000000;\n\n// **************************************************\n// ***************** TYPEOGRAPHY ********************\n// **************************************************\n\n// /**************************************************/\n// /* Fonts */\n// /**************************************************/\n$primary-font: Arial, sans-serif;\n$secondary-font: Verdana, sans-serif;\n\n// /**************************************************/\n// /* Responsive fonts */\n// /**************************************************/\n\n// ratio to update the header font / line-height sizes\n// will be applied to the first item in $header-font-responsive-sizes\n$header-font-modifier-base: 0.33;\n\n// Amount to increase by for every proceeding item in $header-font-responsive-sizes\n$header-breakpoint-increase: 0.05;\n\n// Placeholder for changing header sizes by breakpoints\n$header-increase: 0;\n\n$font-size-standard: rem(20);\n\n// /**************************************************/\n// /* Line Height Ratios */\n// /**************************************************/\n$line-height-ratio: 1.6;\n\n// This values will affect the Header font-sizes\n$line-height-ratio-headers: 1.2;\n\n$underline-bottom: 0px;\n\n// **************************************************\n// ***************** Borders ************************\n// **************************************************\n\n$border-radius: rem(8);\n$border-radius-pill: rem(40);\n$border-radius-circle: 50%;\n\n$border-width: rem(1);\n$border-color: #ffffff;\n$border-style: solid;\n\n$box-shadow: 2px 2px 7px 2px rgb(0 0 0 / 8%);\n\n$shadow-1: rem(2) rem(4) rem(4);\n$shadow-2: rem(2) rem(4) rem(4);\n$shadow-3: rem(4) rem(6) rem(6);\n$shadow-4: rem(6) rem(8) rem(8);\n$shadow-5: rem(8) rem(10) rem(10);\n\n// **************************************************\n// ***************** Columns ************************\n// **************************************************\n\n$number-of-columns: 12;\n\n// **************************************************\n// ******************** container *******************\n// **************************************************\n\n$container-base-size: 1320px;\n$container-width-decrease: 180px;\n\n// **************************************************\n// ***************** Misc ***************************\n// **************************************************\n\n// $list-item-icon: '\\276F'; // Chevron Arrow\n// $list-item-icon: '\\262F'; // Yin Yang\n// $list-item-icon: '\\25E6'; // Black border bullet\n// $list-item-icon: '\\26AC'; // Black border bullet (bigger)\n// $list-item-icon: '\\25CF'; // Black dot\n// $list-item-icon: '\\273A'; // Astrisk Special\n// $list-item-icon: '\\002A'; // Astrisk\n// $list-item-icon: '\\25AA'; // Bullet (square)\n$list-item-icon: '\\2022'; // Bullet (circle)\n\n// **************************************************\n// ***************** SETTINGS ***********************\n// **************************************************\n// These settings allow the user to toggle on, off, or between settings\n\n// Headers container margin on top by default, set be $base-text-margin-top\n$headers-with-margin-top: false;\n\n// toggle on or off if headers should lose their margin top and bottom when flex aligned\n$headers-remove-margin-when-aligned: true;\n\n$font-increase-on-xl: true;\n\n// Nav links have underline on hover\n$nav-link-underline: true;\n\n// True = links inherit text color | false = links inherit $link-color\n$links-have-text-color: false;\n\n// Set Tertiary buttons to have udnerline on hover\n$btn-tertiary-has-underline: true;\n\n// Set any button without a border to be capitalzed\n$btn-none-border-text-is-caps: true;\n\n// Add color tone classes\n$color-classes-with-tones: false;\n\n// Prevents nested containers from applying container padding,\n// If it's unlikely that containers will become nested, set this to false,\n// in order to remove a large amout of unnessicary css\n$unset-nested-containers: true;\n\n// Sets the default media query to use 'min-width' if true, 'max-width' if false\n// ! Setting this to false will break a lot of classes from behaving as expected\n$is-mobile-first: true;\n\n// If true, all browse default button styles will be removed\n$btn-reset: true;\n","@use 'sass:map';\n@use 'sass:meta';\n\n@mixin respond-to($breakpoint) {\n  $dir: if($is-mobile-first, min-width, max-width);\n\n  @media (#{$dir}: $breakpoint) {\n    @content;\n  }\n}\n\n@mixin xl-size() {\n  @include respond-to($screen-xl-min) {\n    @content;\n  }\n}\n\n@mixin lg-size() {\n  @include respond-to($screen-lg-min) {\n    @content;\n  }\n}\n\n@mixin md-size() {\n  @include respond-to($screen-md-min) {\n    @content;\n  }\n}\n\n@mixin sm-size() {\n  @include respond-to($screen-sm-min) {\n    @content;\n  }\n}\n\n@mixin xs-size() {\n  @include respond-to($screen-xs-min) {\n    @content;\n  }\n}\n\n@mixin hover {\n  @media (hover: hover) {\n    @content;\n  }\n}\n\n@mixin flex-center {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n//  * Generate a responsive css variable\n//  *\n//  * @param {text} $var-to-update: the css variable, --css-var\n//  * @param {SASS Map} $map: must be a sass map containing keys of sm, md, lg, xl\n//  * @param {any} $starting-val: optional, the default value, will set value for xs devices\n//  */\n@mixin make-responsive-var($var-to-update, $map, $starting-val: null) {\n  @if ($starting-val) {\n    #{$var-to-update}: $starting-val;\n  } @else if (map-has-key($map, 'md')) {\n    $val: map.get($map, 'md');\n    #{$var-to-update}: #{$val};\n  } @else if (map-has-key($map, 'lg')) {\n    $val: map.get($map, 'lg');\n    #{$var-to-update}: #{$val};\n  }\n\n  $break-points-in-map: map.keys($map);\n  // this requires the map to container\n  // keys equal to the either (sm, md, lg ,xl or, xxl)\n\n  @each $key /* = sm, md, lg, xl, xxl */ in $break-points-in-map {\n    $bp: map.get($breakpoints, $key); // Get bp by key\n    $val: map.get($map, $key);\n\n    @include respond-to($bp) {\n      #{$var-to-update}: #{$val};\n    }\n  }\n}\n\n//  * Generate a css class with responsive classes\n//  *\n//  * @param {SASS Map} $map: must be a sass map containing only values\n//  * @param {text} $class: the name of the class to output\n//  * @param {text} $property: the css property to effect\n//  */\n@mixin class-with-responsive-val-only($map, $class, $property) {\n  @each $val in $map {\n    .#{$class}-#{$val} {\n      #{$property}: $val;\n    }\n    @each $bp, $px in $breakpoints {\n      @include respond-to(#{$px}) {\n        .#{$class}-#{$bp}-#{$val} {\n          #{$property}: $val !important;\n        }\n      }\n    }\n  }\n}\n\n//  * Generate a css class with responsive classes using key and value from map\n//  *\n//  * @param {SASS Map} $map: must be a sass map containing key value pairs\n//  * @param {text} $class: the css property to effect\n//  * @param {text} $property: the css property to effect\n//  * @param {boolean} $calc-value: toggle for using calcualted value, must be paired with `$var-name`\n//  * @param {CSS var} $var-name: A css var to use for calculating the output value\n//  */\n@mixin class-with-responsive-key-and-val(\n  $map,\n  $class,\n  $property,\n  $calc-value: null,\n  $var-name: null\n) {\n  @each $key, $val in $map {\n    .#{$class}-#{$key} {\n      @if $calc-value and $var-name {\n        @if meta.type-of($property) == 'list' {\n          @each $key in $property {\n            #{$key}: calc($val - var($var-name, 0px));\n          }\n        } @else {\n          #{$property}: calc($val - var($var-name, 0px));\n        }\n      } @else {\n        @if meta.type-of($property) == 'list' {\n          @each $key in $property {\n            #{$key}: $val;\n          }\n        } @else {\n          #{$property}: $val;\n        }\n      }\n    }\n\n    @each $bp, $px in $breakpoints {\n      @include respond-to(#{$px}) {\n        .#{$class}-#{$bp}-#{$key} {\n          @if $calc-value and $var-name {\n            @if meta.type-of($property) == 'list' {\n              @each $key in $property {\n                #{$key}: calc($val - var($var-name, 0px)) !important;\n              }\n            } @else {\n              #{$property}: calc($val - var($var-name, 0px)) !important;\n            }\n          } @else {\n            @if meta.type-of($property) == 'list' {\n              @each $key in $property {\n                #{$key}: $val !important;\n              }\n            } @else {\n              #{$property}: $val !important;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n// * Generate eiather a single transition property, or a list of transitions\n//  *\n//  * @param {SASS list | string} the property to transition\n//  * @param {number?} Transition time\n//  * @param {ease?} Transition Ease\n@mixin transition($target, $time: 300, $ease: ease-in-out) {\n  $transition: ();\n\n  // Check type\n  @if meta.type-of($target) == 'list' {\n    @each $val in $target {\n      // set up transition properties\n      $prop: $val #{$time}ms $ease;\n      // Create comma seperated list of transition properties\n      $transition: append($transition, $prop, comma);\n    }\n  } @else {\n    $transition: $target #{$time}ms $ease;\n  }\n\n  transition: $transition;\n}\n\n@mixin border-rounded($radius: $border-radius) {\n  border-radius: $radius;\n  overflow: hidden;\n}\n\n// @mixin hui_tooltip($content: attr(data-tooltip), $direction: top) {\n//   position: relative;\n//   &:before,\n//   &:after {\n//     display: none;\n//     z-index: 98;\n//   }\n//   &:hover {\n//     &:after {\n//       // for text bubble\n//       content: $content;\n//       display: block;\n//       position: absolute;\n//       height: 12px; // (makes total height including padding 22px)\n//       padding: 6px;\n//       font-size: 12px;\n//       white-space: nowrap;\n//       color: #fff;\n//       @include text-shadow(1px 1px #000);\n//       background-color: #222;\n//     }\n//     @if ($direction == 'top') {\n//       &:before {\n//         @include triangle(down, 6px, #222);\n//         top: -6px;\n//         margin-top: 0;\n//         left: 47%;\n//       }\n//       &:after {\n//         top: -28px;\n//         left: 47%;\n//         margin-left: -20px;\n//       }\n//     } @else if ($direction == 'bottom') {\n//       &:before {\n//         @include triangle(up, 6px, #222);\n//         top: auto;\n//         margin-top: 0;\n//         bottom: -6px;\n//         left: 47%;\n//       }\n//       &:after {\n//         bottom: -28px;\n//         left: 47%;\n//         margin-left: -20px;\n//       }\n//     }\n//   }\n// }\n"]}